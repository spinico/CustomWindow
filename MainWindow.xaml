<Window:Borderless  
        x:Class="CustomWindow.MainWindow"   
	    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"   
        xmlns:clr="clr-namespace:System;assembly=mscorlib"
        xmlns:Window="clr-namespace:CustomWindow"   
        xmlns:Properties="clr-namespace:CustomWindow.Properties"    
        mc:Ignorable="d"
        x:Name="Main"
        Title="{DynamicResource Title}"
        Icon="{DynamicResource Logo}"
        MinWidth="640" MinHeight="480" 
        Width="640" Height="480"    
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResize"
        WindowStartupLocation="CenterScreen"
        RenderOptions.BitmapScalingMode="HighQuality"
        >

    <!-- For better logo rendering RenderOptions.BitmapScalingMode="HighQuality" : same as Fant mode -->
    
    <Window.Resources>
        <BitmapImage x:Key="Logo" UriSource="Images/logo-active.png" />
        <clr:String x:Key="Title">Custom Window - a borderless WPF window demo</clr:String>
        <Style x:Key="WindowStateButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border                            
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="0"                            
                            SnapsToDevicePixels="True">
                            <ContentPresenter                                    
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Webdings"/>
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="0,-3,0,0"/>
            <Setter Property="Padding" Value="3,5,3,5"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1,0,1,1" />            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="#FFFFFBD6" />
                    <Setter Property="BorderBrush" Value="#FFFFC500" />
                </Trigger>
                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                    <Setter Property="Foreground" Value="DarkGray"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MaximizeWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowStateButtonStyle}">
            <Setter Property="Content" Value="1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                    <Setter Property="Content" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MinimizeWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowStateButtonStyle}">
            <Setter Property="Content" Value="0"/>
        </Style>
        <Style x:Key="CloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowStateButtonStyle}">
            <Setter Property="Content" Value="r"/>           
        </Style>
    </Window.Resources>

    <Border BorderThickness="1">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="Black"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                        <Setter Property="BorderBrush" Value="DarkGray"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid Background="White">

            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border BorderThickness="0" Grid.Row="0">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="#FF1863A2" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                                <Setter Property="Background" Value="LightGray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <DockPanel>
                        <Button DockPanel.Dock="Right" Click="Close" Style="{StaticResource CloseWindowButtonStyle}" ToolTip="Close this window" />
                        <Button DockPanel.Dock="Right" Click="Maximize" Style="{StaticResource MaximizeWindowButtonStyle}" ToolTip="Maximize this window" />
                        <Button DockPanel.Dock="Right" Click="Minimize" Style="{StaticResource MinimizeWindowButtonStyle}" ToolTip="Minimize this window" />
                        <StatusBar Background="Transparent" Margin="0,0,0,-4" MouseDoubleClick="Maximize" MouseMove="Move"  >                            
                            <Image Width="24" Height="24" Margin="-3,-2,0,2" Style="{DynamicResource TitleImageStyle}"/>
                            <TextBlock Margin="0,0,0,5" FontSize="12" Text="{DynamicResource Title}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                                                <Setter Property="Foreground" Value="DarkGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StatusBar>
                        
                    </DockPanel>
                </Grid>
            </Border>

            
            <Border BorderThickness="0" Grid.Row="1" Background="#FFF1F1F1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40*"/>                        
                    </Grid.RowDefinitions>
                    
                    <TextBlock Grid.Row="0" Text="Window's content here" FontSize="26" VerticalAlignment="Center" HorizontalAlignment="Center" FontStretch="Normal" FontFamily="Times New Roman" />
                </Grid>    
                
            </Border>

        </Grid>
    </Border>

</Window:Borderless>